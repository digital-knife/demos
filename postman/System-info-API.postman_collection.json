{
	"info": {
		"_postman_id": "efaddaa7-0588-41a2-9ff5-7423487b02fe",
		"name": "System info API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "49511925",
		"_collection_link": "https://jermainerakoczy1-6363002.postman.co/workspace/Jermaine-Rakoczy's-Workspace~efbaafb0-ee0c-4da8-8f52-a5f58e699f6c/collection/49511925-efaddaa7-0588-41a2-9ff5-7423487b02fe?action=share&source=collection_link&creator=49511925"
	},
	"item": [
		{
			"name": "info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Basic response checks",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 500ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"// Validate JSON structure",
							"pm.test(\"Response is valid JSON\", function () {",
							"    pm.expect(() => pm.response.json()).to.not.throw();",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"",
							"// Check required properties",
							"pm.test(\"Response contains required fields\", function () {",
							"    pm.expect(jsonData).to.have.property(\"hostname\");",
							"    pm.expect(jsonData).to.have.property(\"platform\");",
							"    pm.expect(jsonData).to.have.property(\"release\");",
							"    pm.expect(jsonData).to.have.property(\"uptime\");",
							"    pm.expect(jsonData).to.have.property(\"container\");",
							"});",
							"",
							"// Optional: log for debugging",
							"console.log(\"System info response:\", jsonData);",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/info\n",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"info\n"
					]
				}
			},
			"response": []
		},
		{
			"name": "health",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 500ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"pm.test(\"Response is valid JSON\", function () {",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"Health check response structure\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"status\");",
							"    pm.expect(jsonData.status).to.eql(\"ok\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/health\n",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"health\n"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": ""
		}
	]
}